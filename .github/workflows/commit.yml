name: New Commit

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        target: [linux, linux64, win32, win64]

    steps:
    - name: Install multilib packages
      if: ${{ matrix.target == 'linux' || matrix.target == 'win32' }}
      working-directory: '/tmp'
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y g++-multilib linux-libc-dev:i386

    - name: Install g++-i686-linux-gnu
      if: ${{ matrix.target == 'linux' }}
      working-directory: '/tmp'
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-i686-linux-gnu

    - name: Install mingw-w64
      if: ${{ startsWith(matrix.target, 'win') }}
      working-directory: '/tmp'
      run: |
        sudo apt-get update
        sudo apt-get install -y mingw-w64

    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true

    - name: Build binaries
      run: |
        export LUA_RUNNER_VERSION=$(git describe --tags | sed 's/^v//')
        echo "LUA_RUNNER_VERSION=${LUA_RUNNER_VERSION}" >> $GITHUB_ENV
        cmake -B build -DLUA_RUNNER_VERSION=${LUA_RUNNER_VERSION} -DCMAKE_TOOLCHAIN_FILE=toolchain-${{ matrix.target }}.cmake
        cmake --build build --target package

    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
        name: gmod-lua-runner-${{ env.LUA_RUNNER_VERSION }}-binaries
        path: build/gmod-lua-runner-*.tar.gz

  format:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install clang-format
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-format-18

      - name: Run clang-format
        run: clang-format-18 -style=file -i $(git ls-files | grep -E '\.(h|cpp)$')

      - name: Check for changes
        run: git diff --exit-code

  test:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        submodules: true

    - name: Configure project
      run: |
        cmake -B build -DCMAKE_TOOLCHAIN_FILE=toolchain-linux64.cmake

    - name: Build binaries
      run: |
        cmake --build build

    - name: Check out GLuaTest
      uses: actions/checkout@v5
      with:
        repository: 'CFC-Servers/GLuaTest'
        ref: '1369ded8ec933157dc21a67888802f8e58f81b1e'
        path: 'GLuaTest'

    - name: Create the required directory structure
      run: |
        mkdir -p "root/garrysmod/lua/autorun"
        mkdir -p "root/garrysmod/lua/tests"
        ln -Tsv "$(pwd)/GLuaTest/lua/autorun/gluatest.lua" "root/garrysmod/lua/autorun/gluatest.lua"
        ln -Tsv "$(pwd)/GLuaTest/lua/gluatest" "root/garrysmod/lua/gluatest"
        ln -Tsv "$(pwd)/tests" "root/garrysmod/lua/tests/gmod-lua-runner"

    - name: Run tests
      run: |
        GMOD_DIR=root ./build/runner/runner test.lua

    - name: Run argfuzz
      run: |
        ./build/argfuzz/argfuzz
